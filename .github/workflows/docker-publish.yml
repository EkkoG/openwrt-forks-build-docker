name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '35 17 * * *'
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: imagebuilder


jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        config:
          - fork-name: Lean
            target: x86
            subtarget: "64"
            version: snapshots
          - fork-name: Lean
            target: rockchip
            subtarget: armv8
            version: snapshots
          - fork-name: Lean
            target: ramips
            subtarget: mt7621
            version: snapshots
          - fork-name: Lean
            target: mediatek
            subtarget: filogic
            version: snapshots
          - fork-name: Lean
            target: amlogic
            subtarget: meson8b
            version: snapshots
          - fork-name: Lean
            target: armsr
            subtarget: armv8
            version: snapshots
          - fork-name: Lean
            target: ath79
            subtarget: nand
            version: snapshots
          - fork-name: Lean
            target: bcm27xx
            subtarget: bcm2708
            version: snapshots
          - fork-name: Lean
            target: bcm27xx
            subtarget: bcm2709
            version: snapshots
          - fork-name: Lean
            target: bcm27xx
            subtarget: bcm2710
            version: snapshots
          - fork-name: Lean
            target: bcm27xx
            subtarget: bcm2711
            version: snapshots
          - fork-name: Lean
            target: bcm27xx
            subtarget: bcm2712
            version: snapshots
          - fork-name: Lean
            target: bcm53xx
            subtarget: generic
            version: snapshots
          - fork-name: Lean
            target: ipq40xx
            subtarget: generic
            version: snapshots
          - fork-name: Lean
            target: ipq806x
            subtarget: generic
            version: snapshots
          - fork-name: Lean
            target: mediatek
            subtarget: mt7622
            version: snapshots
          - fork-name: Lean
            target: mvebu
            subtarget: cortexa9
            version: snapshots
          - fork-name: Lean
            target: qualcommax
            subtarget: ipq50xx
            version: snapshots
          - fork-name: Lean
            target: qualcommax
            subtarget: ipq60xx
            version: snapshots
          - fork-name: Lean
            target: qualcommax
            subtarget: ipq807x
            version: snapshots
          - fork-name: Lean
            target: ramips
            subtarget: mt7620
            version: snapshots
          - fork-name: Lean
            target: ramips
            subtarget: mt76x8
            version: snapshots
          - fork-name: Lean
            target: sunxi
            subtarget: cortexa53
            version: snapshots
          - fork-name: Lean
            target: sunxi
            subtarget: cortexa7
            version: snapshots
          - fork-name: Lean
            target: x86
            subtarget: generic
            version: snapshots
          - fork-name: hanwckf
            target: mediatek
            subtarget: mt7981
            version: snapshots
          - fork-name: hanwckf
            target: mediatek
            subtarget: mt7986
            version: snapshots
          - fork-name: Lienol
            target: x86
            subtarget: "64"
            version: snapshots
          - fork-name: Lienol
            target: rockchip
            subtarget: armv8
            version: snapshots
          - fork-name: Lienol
            target: ramips
            subtarget: mt7621
            version: snapshots
          - fork-name: Lienol
            target: mediatek
            subtarget: filogic
            version: snapshots
          - fork-name: Lienol
            target: amlogic
            subtarget: meson8b
            version: snapshots
          - fork-name: Lienol
            target: armsr
            subtarget: armv8
            version: snapshots
          - fork-name: Lienol
            target: ath79
            subtarget: nand
            version: snapshots
          - fork-name: Lienol
            target: bcm27xx
            subtarget: bcm2708
            version: snapshots
          - fork-name: Lienol
            target: bcm27xx
            subtarget: bcm2709
            version: snapshots
          - fork-name: Lienol
            target: bcm27xx
            subtarget: bcm2710
            version: snapshots
          - fork-name: Lienol
            target: bcm27xx
            subtarget: bcm2711
            version: snapshots
          - fork-name: Lienol
            target: bcm27xx
            subtarget: bcm2712
            version: snapshots
          - fork-name: Lienol
            target: bcm53xx
            subtarget: generic
            version: snapshots
          - fork-name: Lienol
            target: ipq40xx
            subtarget: generic
            version: snapshots
          - fork-name: Lienol
            target: ipq806x
            subtarget: generic
            version: snapshots
          - fork-name: Lienol
            target: mediatek
            subtarget: mt7622
            version: snapshots
          - fork-name: Lienol
            target: mvebu
            subtarget: cortexa9
            version: snapshots
          - fork-name: Lienol
            target: qualcommax
            subtarget: ipq50xx
            version: snapshots
          - fork-name: Lienol
            target: qualcommax
            subtarget: ipq60xx
            version: snapshots
          - fork-name: Lienol
            target: qualcommax
            subtarget: ipq807x
            version: snapshots
          - fork-name: Lienol
            target: ramips
            subtarget: mt7620
            version: snapshots
          - fork-name: Lienol
            target: ramips
            subtarget: mt76x8
            version: snapshots
          - fork-name: Lienol
            target: sunxi
            subtarget: cortexa53
            version: snapshots
          - fork-name: Lienol
            target: sunxi
            subtarget: cortexa7
            version: snapshots
          - fork-name: Lienol
            target: x86
            subtarget: generic
            version: snapshots

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
        with:
          cosign-release: 'v2.2.4'

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ matrix.config.fork-name }}-${{ matrix.config.target }}-${{ matrix.config.subtarget }}-${{ matrix.config.version }}
            type=raw,value=${{ matrix.config.fork-name }}-${{ matrix.config.target }}-${{ matrix.config.subtarget }}-latest

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            RUN_SETUP=1
            TARGET=${{ matrix.config.target }}/${{ matrix.config.subtarget }}
            FILE_HOST=https://downloads.sourceforge.net/project/openwrt-forks-build/${{ matrix.config.fork-name }}
            VERSION_PATH=${{ matrix.config.version }}
          cache-from: type=gha,scope=${{ matrix.config.fork-name }}-${{ matrix.config.target }}-${{ matrix.config.subtarget }}
          cache-to: type=gha,mode=max,scope=${{ matrix.config.fork-name }}-${{ matrix.config.target }}-${{ matrix.config.subtarget }}

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
